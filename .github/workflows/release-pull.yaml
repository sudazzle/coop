
name: Automate Release PR Creation

on:
  push:
    branches:
      - main

jobs:
  tests:
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgresql
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgresql
        options: >-
          --health-cmd "pg_isready -U postgresql"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5438:5432

    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      - name: Install dependencies
        run: npm ci

      - name: Check formatting
        run: npm run format:check

      - name: Build
        run: npm run build

      - name: Run Server
        run: node dist/server.js &

      - name: Wait for server
        id: wait
        run: |
          #!/bin/bash -ex
          while true; do
            curl -k -q http://localhost:8080/health && exit 0 || sleep 2
          done
        continue-on-error: true
        timeout-minutes: 1

      - name: Run E2E tests
        id: tests
        if: steps.wait.outcome == 'success'
        run: npm run e2e:tests:silent

      - name: Fail job if server doesn't start
        if: steps.wait.outcome == 'failure'
        run: |
          echo "Server not running"
          exit 1

      - name: Fail job if tests fail
        if: steps.tests.outcome == 'failure'
        run: |
          echo "Test failed"
          exit 1

  release-pr-creation:
    needs: tests
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'chore(main): release')"
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Release Please
        id: release
        uses: google-github-actions/release-please-action@v4
        with:
          token: ${{ secrets.ACCESS_TOKEN_ACTIONS }}
          release-type: node